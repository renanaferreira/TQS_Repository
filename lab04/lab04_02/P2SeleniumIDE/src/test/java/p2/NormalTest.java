// Generated by Selenium IDE
package p2;


import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.IsNot.not;

import io.github.bonigarcia.seljup.SeleniumJupiter;

import org.hamcrest.core.Is;
import org.junit.jupiter.api.extension.ExtendWith;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;


@ExtendWith(SeleniumJupiter.class)
public class NormalTest {

  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @BeforeEach
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }

  @AfterEach
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void normalTest() {
    // Test name: normalTest
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://blazedemo.com/");
    // 2 | setWindowSize | 1852x1016 | 
    driver.manage().window().setSize(new Dimension(1852, 1016));
    // 3 | select | name=fromPort | label=Boston
    {
      WebElement dropdown = driver.findElement(By.name("fromPort"));
      dropdown.findElement(By.xpath("//option[. = 'Boston']")).click();
    }
    // 4 | mouseDownAt | name=fromPort | 0,0
    {
      WebElement element = driver.findElement(By.name("fromPort"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    // 5 | mouseMoveAt | name=fromPort | 0,0
    {
      WebElement element = driver.findElement(By.name("fromPort"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 6 | mouseUpAt | name=fromPort | 0,0
    {
      WebElement element = driver.findElement(By.name("fromPort"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    // 7 | select | name=toPort | label=London
    {
      WebElement dropdown = driver.findElement(By.name("toPort"));
      dropdown.findElement(By.xpath("//option[. = 'London']")).click();
    }
    // 8 | mouseDownAt | name=toPort | 0,0
    {
      WebElement element = driver.findElement(By.name("toPort"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    // 9 | mouseMoveAt | name=toPort | 0,0
    {
      WebElement element = driver.findElement(By.name("toPort"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 10 | mouseUpAt | name=toPort | 0,0
    {
      WebElement element = driver.findElement(By.name("toPort"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    // 11 | click | css=.btn-primary | 
    driver.findElement(By.cssSelector(".btn-primary")).click();
    // 12 | click | css=tr:nth-child(1) .btn | 
    driver.findElement(By.cssSelector("tr:nth-child(1) .btn")).click();
    // 13 | click | id=inputName | 
    driver.findElement(By.id("inputName")).click();
    // 14 | type | id=inputName | Renato
    driver.findElement(By.id("inputName")).sendKeys("Renato");
    // 15 | click | id=address | 
    driver.findElement(By.id("address")).click();
    // 16 | type | id=address | universidade de aveiro
    driver.findElement(By.id("address")).sendKeys("universidade de aveiro");
    // 17 | click | id=city | 
    driver.findElement(By.id("city")).click();
    // 18 | type | id=city | aveiro
    driver.findElement(By.id("city")).sendKeys("aveiro");
    // 19 | click | css=body | 
    driver.findElement(By.cssSelector("body")).click();
    // 20 | click | id=state | 
    driver.findElement(By.id("state")).click();
    // 21 | type | id=state | aveiro
    driver.findElement(By.id("state")).sendKeys("aveiro");
    // 22 | click | id=zipCode | 
    driver.findElement(By.id("zipCode")).click();
    // 23 | type | id=zipCode | 3800-355
    driver.findElement(By.id("zipCode")).sendKeys("3800-355");
    // 24 | click | css=body | 
    driver.findElement(By.cssSelector("body")).click();
    // 25 | click | id=creditCardNumber | 
    driver.findElement(By.id("creditCardNumber")).click();
    // 26 | type | id=creditCardNumber | 123456789
    driver.findElement(By.id("creditCardNumber")).sendKeys("123456789");
    // 27 | click | id=nameOnCard | 
    driver.findElement(By.id("nameOnCard")).click();
    // 28 | type | id=nameOnCard | renato 
    driver.findElement(By.id("nameOnCard")).sendKeys("renato ");
    // 29 | click | id=inputName | 
    driver.findElement(By.id("inputName")).click();
    // 30 | type | id=inputName | Renato oliveira
    driver.findElement(By.id("inputName")).sendKeys("Renato oliveira");
    // 31 | click | css=.control-group:nth-child(11) | 
    driver.findElement(By.cssSelector(".control-group:nth-child(11)")).click();
    // 32 | click | id=nameOnCard | 
    driver.findElement(By.id("nameOnCard")).click();
    // 33 | type | id=nameOnCard | renato oliveira
    driver.findElement(By.id("nameOnCard")).sendKeys("renato oliveira");
    // 34 | click | css=.checkbox | 
    driver.findElement(By.cssSelector(".checkbox")).click();
    // 35 | click | css=.btn-primary | 
    driver.findElement(By.cssSelector(".btn-primary")).click();
    // 36 | assertConfirmation | title | BlazeDemo Confirmation
    assertThat(driver.getTitle(), Is.is("BlazeDemo Confirmation"));
  }
}
